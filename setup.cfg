##########################
# Setup.py Configuration #
##########################
[metadata]
name = embeddingdb
version = attr: src.embeddingdb.version.VERSION
description = A package for storing and querying knowledge graph embeddings
long_description = file: README.rst

# License information
license = MIT
license_file = LICENSE

# Search tags
classifiers =
    Environment :: Console
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Scientific/Engineering :: Chemistry
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Information Analysis
keywords =
    Knowledge Graph Embeddings
    Machine Learning
    Data Mining
    Linked Data

[options]
install_requires =
    sqlalchemy
    tqdm
    psycopg2-binary
    scikit-learn
    click
    easy-config
    pandas
    joblib

zip_safe = false
python_requires = >=3.7
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
docs =
    sphinx
    sphinx-rtd-theme
    sphinx-click
    sphinx-autodoc-typehints
web =
    flask
    flask-bootstrap
    flask-sqlalchemy
    flasgger

[options.entry_points]
console_scripts =
    embeddingdb = embeddingdb.cli:main

######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = embeddingdb
omit =
    tests/*
    docs/*
    src/embeddingdb/__main__.py

[coverage:paths]
source =
    src/poem
    .tox/*/lib/python*/site-packages/embeddingdb

[coverage:report]
show_missing = True
exclude_lines =
    def __str__
    def __repr__
